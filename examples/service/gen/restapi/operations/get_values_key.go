// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetValuesKeyHandlerFunc turns a function with the right signature into a get values key handler
type GetValuesKeyHandlerFunc func(GetValuesKeyParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetValuesKeyHandlerFunc) Handle(params GetValuesKeyParams) middleware.Responder {
	return fn(params)
}

// GetValuesKeyHandler interface for that can handle valid get values key params
type GetValuesKeyHandler interface {
	Handle(GetValuesKeyParams) middleware.Responder
}

// NewGetValuesKey creates a new http.Handler for the get values key operation
func NewGetValuesKey(ctx *middleware.Context, handler GetValuesKeyHandler) *GetValuesKey {
	return &GetValuesKey{Context: ctx, Handler: handler}
}

/*GetValuesKey swagger:route GET /values/{key} getValuesKey

Read from DB

*/
type GetValuesKey struct {
	Context *middleware.Context
	Handler GetValuesKeyHandler
}

func (o *GetValuesKey) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetValuesKeyParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
